package base;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import io.github.bonigarcia.wdm.WebDriverManager;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import java.util.List;

public class BaseTest {
    protected WebDriver driver;

    @BeforeClass
    public void setup() {
        WebDriverManager.chromedriver().setup();
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--start-maximized", "--headless", "--no-sandbox", "--disable-dev-shm-usage");
        driver = new ChromeDriver(options);
    }

    @Test
    public void searchFordF150() {
        driver.get("https://www.rbauction.com");
        WebElement searchBox = driver.findElement(By.id("searchBoxId")); // Adjust ID accordingly
        searchBox.sendKeys("Ford F-150");
        searchBox.submit();

        List<WebElement> results = driver.findElements(By.cssSelector(".search-results-item"));
        int totalResults = results.size();
        Assert.assertTrue(totalResults > 0, "No results found");
        
        WebElement firstResult = results.get(0);
        Assert.assertTrue(firstResult.getText().contains("Ford F-150"), "First result does not contain 'Ford F-150'");
        
        WebElement yearFilter = driver.findElement(By.id("yearFilter")); // Adjust ID accordingly
        yearFilter.click();
        WebElement yearFrom = driver.findElement(By.id("yearFrom"));
        yearFrom.sendKeys("2010");
        WebElement applyFilter = driver.findElement(By.id("applyFilter"));
        applyFilter.click();

        List<WebElement> filteredResults = driver.findElements(By.cssSelector(".search-results-item"));
        int filteredTotal = filteredResults.size();
        Assert.assertNotEquals(filteredTotal, totalResults, "Filtered results count should be different");
    }

    @AfterClass
    public void teardown() {
        if (driver != null) {
            driver.quit();
        }
    }
}
